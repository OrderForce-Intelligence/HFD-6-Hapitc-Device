import Sofa

import os
path = os.path.dirname(os.path.abspath(__file__))+'/mesh/'

def createScene(rootNode):

                rootNode.addObject('RequiredPlugin', pluginName='SoftRobots SoftRobots.Inverse')
                rootNode.addObject('VisualStyle', displayFlags='showVisualModels showBehaviorModels showCollisionModels hideBoundingCollisionModels hideForceFields showInteractionForceFields hideWireframe')

                rootNode.addObject('FreeMotionAnimationLoop')
                rootNode.addObject('QPInverseProblemSolver')

                rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765')
                rootNode.addObject('OglSceneFrame', style="Arrows", alignment="TopRight")

                ##########################################
                # Goal                                   #
                ##########################################
                goal = rootNode.addChild('goal')
                goal.addObject('EulerImplicitSolver', firstOrder=True)
                goal.addObject('CGLinearSolver', iterations='100', tolerance='1e-05', threshold='1e-05')
                goal.addObject('MechanicalObject', name='goalMO', position='-230 15 0')
                goal.addObject('SphereCollisionModel', radius='5', group='3')
                goal.addObject('UncoupledConstraintCorrection')


                ##########################################
                # FEM Model                              #
                ##########################################
                model = rootNode.addChild('model')
                model.addObject('EulerImplicitSolver', name='odesolver', rayleighStiffness="0.2", rayleighMass="0.2")
                model.addObject('SparseLDLSolver', name='preconditioner')

                model.addObject('MeshVTKLoader', name='loader', filename=path+'PneuNets.vtk')
                model.addObject('TetrahedronSetTopologyContainer', src='@loader', name='container')
                model.addObject('TetrahedronSetTopologyModifier')

                model.addObject('MechanicalObject', name='tetras', template='Vec3', showIndices=False, showIndicesScale='4e-5', rx='0', dz='0')
                model.addObject('UniformMass', totalMass='0.5')
                model.addObject('TetrahedronFEMForceField', template='Vec3', name='FEM', method='large', poissonRatio='0.3',  youngModulus='100', drawAsEdges="1")

                model.addObject('BoxROI', name='boxROI', box='-10 0 -20 0 30 20', drawBoxes=True, position="@tetras.rest_position", tetrahedra="@container.tetrahedra")
                model.addObject('BoxROI', name='boxROISubTopo', box='-175 22.5 -8 -19 28 8', drawBoxes=False, position="@tetras.rest_position", tetrahedra="@container.tetrahedra")
                model.addObject('RestShapeSpringsForceField', points='@boxROI.indices', stiffness='1e12')

                model.addObject('LinearSolverConstraintCorrection', solverName='preconditioner')

                ##########################################
                # Sub topology                           #
                ##########################################
                modelSubTopo = model.addChild('modelSubTopo')
                modelSubTopo.addObject('TetrahedronSetTopologyContainer', position='@loader.position', tetrahedra="@boxROISubTopo.tetrahedraInROI", name='container')
                modelSubTopo.addObject('TetrahedronFEMForceField', template='Vec3', name='FEM', method='large', poissonRatio='0.3',  youngModulus='200')

                ##########################################
                # Effector                               #
                ##########################################
                effector = model.addChild('effector')
                effector.addObject('MechanicalObject', name="effectorPoint", position="-195 15 0")
                effector.addObject('PositionEffector', template='Vec3', indices="0", effectorGoal="@../../goal/goalMO.position", useDirections="1 1 0")
                effector.addObject('BarycentricMapping', mapForces=False, mapMasses=False)


                ##########################################
                # Actuator                               #
                ##########################################
                cavity = model.addChild('cavity')
                cavity.addObject('MeshSTLLoader', name='loader', filename=path+'PneuNets_Cavity.stl')
                cavity.addObject('MeshTopology', src='@loader', name='topo')
                cavity.addObject('MechanicalObject', name='cavity')
                cavity.addObject('SurfacePressureActuator', template='Vec3', triangles='@topo.triangles', visualization='0', showVisuScale='0.0002', maxVolumeGrowthVariation="500", minPressure="0")
                cavity.addObject('BarycentricMapping', name='mapping',  mapForces=False, mapMasses=False)


                ##########################################
                # Visualization                          #
                ##########################################
                modelVisu = model.addChild('visu')
                modelVisu.addObject('MeshSTLLoader', filename=path+"PneuNets.stl", name="loader")
                modelVisu.addObject('OglModel', src="@loader", template='ExtVec3f', color='0.7 0.7 0.7 0.6')
                modelVisu.addObject('BarycentricMapping')


                return rootNode
